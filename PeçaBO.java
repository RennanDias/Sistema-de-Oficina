package BO;

import java.util.Scanner;

import VO.AutomovelVO;
import VO.Pe網VO;

public class Pe網BO {

public Pe網VO adicionarPe網() {
		
		Pe網VO p = new Pe網VO();
		AutomovelBO met = new AutomovelBO();
		
		System.out.println("ADICIONANDO NOVA PE큐!\n");
		
		Scanner s = new Scanner(System.in);
		System.out.println("Digite o nome da pe網: ");
		p.setNome(s.nextLine());
		
		s = new Scanner(System.in);
		System.out.println("Digite o pre每 da pe網: ");
		p.setPre每(Float.parseFloat(s.nextLine()));
		
		s = new Scanner(System.in);
		System.out.println("Digite o fabricante da pe網: ");
		p.setFabricante(s.nextLine());
		
		p.setAutomoveis(met.adicionarAutomovel());
		
		System.out.println("Pe網 adicionada.");
		
		return p;
	}
	
	public Pe網VO alterarPe網(Pe網VO p) {
		
		System.out.println("ALTERANDO PE큐!\n");
		
		Scanner s = new Scanner(System.in);
		System.out.println("Nome antigo: " + p.getNome());
		System.out.println("\nDigite o novo nome: ");
		p.setNome(s.nextLine());
		
		s = new Scanner(System.in);
		System.out.println("Pre每 antigo: " + p.getPre每());
		System.out.println("\nDigite o novo pre每: ");
		p.setPre每(Float.parseFloat(s.nextLine()));
		
		s = new Scanner(System.in);
		System.out.println("Fabricante antigo: " + p.getFabricante());
		System.out.println("\nDigite o novo fabricante: ");
		p.setFabricante(s.nextLine());
		
		System.out.println("Pe網 alterada.");
		
		return p;
	}

	public void deletarPe網(Pe網VO[] p) {
		
		boolean t = false;
		String delete;
		
		System.out.println("DELETANDO PE큐!\n");
		
		Scanner s = new Scanner(System.in);
		System.out.println("Digite o nome da pe網 a ser deletada: ");
		delete = s.nextLine();
		
		for (int i = 0; i < p.length; i++) {
			if (delete.equals(p[i].getNome())) {
				for (int j = i; j < (p.length - 1); j++) {
					p[j] = p[j+1];
				}
				t = true;
				System.out.println("Pe網 deletada.");
				break;
			}
		}
		if (t != true) {
			System.out.println("Pe網 n伋 encontrada!\n");
		}
		
	}
	
	public void mostrarPe網(Pe網VO p) {
		AutomovelBO met = new AutomovelBO();
		System.out.println("Nome: " + p.getNome());
		System.out.println("Pre每: " + p.getPre每());
		System.out.println("Fabricante: " + p.getFabricante());
		met.mostrarAutomovel(p.getAutomoveis());
	}
	
	public void pesquisarPe網(Pe網VO[] p) {
		
		boolean t = false;
		String c;
		
		System.out.println("PESQUISANDO PE큐!\n");
		
		Scanner s = new Scanner(System.in);
		System.out.println("Digite o nome ou fabricante da pe網 a ser pesquisada: ");
		c = s.nextLine();
		
		for (int i = 0; i < p.length; i++) {
			if (c.equals(p[i].getNome()) || c.equals(p[i].getFabricante())) {
				mostrarPe網(p[i]);
				t = true;
				break;
			}
		}
		if (t != true) {
			System.out.println("Pe網 n伋 encontrada!\n");
		}
	}
	
public void pesquisarPe網(Pe網VO p, AutomovelVO[] a) { //Na main, pesuisar pe網 por cliente deve ser colocada dentro de um 'for'
	//para que eu percorra meu vetor de pe網s, e dentro de cada pe網, passar como argumento do m俸odo o getAutomoveis pra passar
	//o vetor de autom阻eis
		
		boolean t = false;
		String m, c;
		
		System.out.println("PESQUISANDO PE큐!\n");
		
		Scanner s = new Scanner(System.in);
		System.out.println("Digite a marca e o modelo do carro do qual deseja procurar a pe網: ");
		System.out.println("Marca: ");
		m = s.nextLine();
		System.out.println("Modelo: ");
		c = s.nextLine();
		
		for (int i = 0; i < a.length; i++) {
			if (m.equals(a[i].getMarca()) && c.equals(a[i].getModelo())) {
				mostrarPe網(p);
				t = true;
				break;
			}
		}
		
		if (t != true) {
			System.out.println("Pe網 n伋 encontrada!\n");
		}
	}
	
}
